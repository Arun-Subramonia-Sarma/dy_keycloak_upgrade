{{- if .Values.keycloak.ingress.appgwIngress.newhost.enabled -}}
{{- $istio := .Values.keycloak.istio | default dict -}}
{{- if not $istio.enabled -}}
{{- $svcPathType := default .Values.keycloak.service.pathType "ImplementationSpecific"  -}}
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: keycloak-ingress-new
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
  {{- with .Values.keycloak.ingress.appgwIngress.newhost.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.keycloak.ingress.appgwIngress.newhost.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.keycloak.ingress.appgwIngress.newhost.className }}
  {{- end }}
{{- if .Values.keycloak.ingress.appgwIngress.newhost.tls }}
  tls:
  {{- range .Values.keycloak.ingress.appgwIngress.newhost.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.keycloak.ingress.appgwIngress.newhost.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
          - path: {{ . }}
            pathType: {{ $svcPathType }} 
            backend:
              service:
                name: keycloak-http
                port:
                  number: 80
        {{- end }}
  {{- end }}
{{- end }}
{{- end }}
