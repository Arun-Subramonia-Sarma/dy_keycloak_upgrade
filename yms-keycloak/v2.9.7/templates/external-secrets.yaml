{{- $fullName := include "keycloak.fullname" . -}}
{{- if and .Values.externalsecrets .Values.externalsecrets.es}}
{{- range $key, $value := .Values.externalsecrets.es }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $fullName }}-{{ $key }}
  labels:
    {{- range $k, $v := $.Values.labels}}
    {{ $k }}: {{ $v | quote }}
    {{- end }}
    {{- with $.Values.externalsecrets.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with $value.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
{{- if $.Values.update_config }}
    "helm.sh/hook": "pre-install,pre-upgrade"
{{- else }}
    "helm.sh/hook": "pre-install"
{{- end }}
    "helm.sh/hook-delete-policy": "before-hook-creation"
    {{- with $.Values.externalsecrets.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with $value.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  refreshInterval: {{ $.Values.externalsecrets.refreshInterval}}
  secretStoreRef:
    name: {{ $.Values.externalsecrets.name }}
    kind: {{ $.Values.externalsecrets.kind }}
  target:
    name: {{ $fullName }}-{{ $key }}
    creationPolicy: Owner
  data:
  {{- range $k, $v := $value.data }}
  - secretKey: {{ $k}}
    remoteRef:
      conversionStrategy: {{ $v.conversionStrategy}}
      decodingStrategy: {{ $v.decodingStrategy}}
      key: {{ $v.key}}
       {{- if eq $.Values.cloud "aws" }}
      property: {{ $v.property}}
      {{- end }}
  {{- end }}
---
 {{- end}}
{{- end}}